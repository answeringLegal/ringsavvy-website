{"version":3,"sources":["webpack:///./src/components/valueGrid/style.js","webpack:///./src/components/valueGrid/value.js","webpack:///./src/components/valueGrid/index.js","webpack:///./src/components/accordion/style.js","webpack:///./src/components/accordion/accordionItem.js","webpack:///./src/components/accordion/index.js","webpack:///./src/components/tabs/index.js","webpack:///./src/assets/images/corporate-office-bg-overlay.jpg","webpack:///./src/components/emailSection/style.js","webpack:///./src/components/emailSection/index.js","webpack:///./src/components/contentSection/index.js","webpack:///./src/pages/how-it-works.js","webpack:///./src/components/emailForm/style.js","webpack:///./src/components/emailForm/index.js","webpack:///./src/components/faqAccordion/cta.js","webpack:///./src/components/faqAccordion/style.js","webpack:///./src/components/faqAccordion/faq.js","webpack:///./src/components/faqAccordion/index.js"],"names":["ValueLink","styled","Link","theme","global","colors","primary","fonts","serif","hasArrow","Value","value","isFirst","heading","content","ctaLink","to","ValueGrid","gridData","contentData","horizontal","map","index","key","AccordionList","ul","mediaQueries","md","AccordionTab","div","white","fontSizes","isOpen","css","sm","AccordionContent","article","AccordionItem","tab","ctaText","useState","setOpen","useMeasure","bind","bounds","slide","useSpring","overflow","height","top","transform","onClick","style","length","Array","isArray","p","Accordion","tabData","Tabs","isActive","setActive","alignCenter","title","module","exports","SectionWithBG","Section","hasBackgroundBox","EmailSection","ContentSection","children","HowItWorks","location","data","useStaticQuery","id","name","find","center","fluid","file","childImageSharp","EmailCTA","Background","HalfWrapper","FormWrapper","Input","input","EmailForm","type","placeholder","padding","$primary","Cta","TabContent","FaqList","Faq","li","base","props","FaqAnswer","faq","question","answer","FaqAccordion"],"mappings":"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","file":"component---src-pages-how-it-works-js-b4cd90665f90f7779244.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport { hasArrow } from '../globals';\n\nexport const ValueLink = styled(Link)`\n  color: ${({ theme }) => theme.global.colors.primary};\n  display: block;\n  font-family: ${({ theme }) => theme.global.fonts.serif};\n  font-weight: 700;\n  text-decoration: none;\n  margin-bottom: 1em;\n\n  ${hasArrow}\n`;\n","import React from 'react';\nimport { OneThird } from '../globals';\nimport * as Styled from './style';\n\nconst Value = ({ value, isFirst }) => {\n  const { heading, content, ctaLink } = value;\n  return (\n    <OneThird isFirst={isFirst}>\n      <Styled.ValueLink to={ctaLink}>{heading}</Styled.ValueLink>\n      <p>{content}</p>\n    </OneThird>\n  );\n};\n\nexport default Value;\n","import React from 'react';\nimport { Section } from '../section';\nimport { Wrapper } from '../wrapper';\nimport Content from '../content';\nimport Value from './value';\nimport { FlexRow } from '../globals';\n\nconst ValueGrid = ({ gridData, contentData, horizontal = false }) => {\n  return (\n    <Section>\n      <Wrapper>\n        <Content contentData={contentData} horizontal={horizontal} />\n        <FlexRow>\n          {gridData.map((value, index) => {\n            const isFirst = index === 0 ? true : false;\n\n            return <Value value={value} key={index} isFirst={isFirst} />;\n          })}\n        </FlexRow>\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default ValueGrid;\n","import styled, { css } from 'styled-components';\nimport { TabList, Tab } from '../tabs/style';\n\nexport const AccordionList = styled.ul`\n  display: none;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n\n  @media ${({ theme }) => theme.global.mediaQueries.md} {\n    display: block;\n  }\n`;\n\nexport const AccordionTab = styled.div`\n  align-items: center;\n  background: ${({ theme }) => theme.global.colors.white};\n  border-radius: 5px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.12);\n  color: #7a7a7a;\n  cursor: pointer;\n  display: flex;\n  font-family: ${({ theme }) => theme.global.fonts.serif};\n  font-size: ${({ theme }) => theme.global.fontSizes.md};\n  font-weight: 700;\n  line-height: 1.3em;\n  margin: 0 0 20px;\n  max-width: 480px;\n  padding: 1.444444em;\n  transition: all 0.2s;\n  width: 100%;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    css`\n      background: ${({ theme }) => theme.global.colors.primary};\n      color: ${({ theme }) => theme.global.colors.white};\n    `}\n\n  @media ${({ theme }) => theme.global.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport useMeasure from '../../utils/useMeasure';\nimport { animated, useSpring } from 'react-spring';\nimport { StyledLink } from '../button';\nimport { Count } from '../tabs/style';\nimport * as Styled from './style';\n\nconst AccordionContent = styled.article`\n  max-width: none;\n  padding: 1em 5% 3.25em;\n  width: 100%;\n\n  h4 {\n    margin-bottom: 1em;\n  }\n\n  p:last-of-type {\n    margin-bottom: 1.625em;\n  }\n`;\n\n// Fix illegal invocation error\nconst AccordionItem = ({ tab, index }) => {\n  const { heading, content, ctaText, ctaLink } = tab;\n  const [isOpen, setOpen] = useState(tab[0]);\n\n  const [bind, bounds] = useMeasure();\n  const slide = useSpring({\n    overflow: 'hidden',\n    height: isOpen ? bounds.height + bounds.top + 52 : 0,\n    transform: isOpen ? 'translate3d(0, 0, 0)' : 'translate3d(0, -20px, 0)',\n  });\n\n  return (\n    <li>\n      <Styled.AccordionTab onClick={() => setOpen(!isOpen)} isOpen={isOpen}>\n        <Count>0{index + 1}</Count>\n        {heading}\n      </Styled.AccordionTab>\n      <animated.div style={slide}>\n        <AccordionContent {...bind}>\n          <h4>{heading}</h4>\n\n          {content.length > 1 && Array.isArray(content) ? (\n            content.map((p, index) => <p key={index}>{p}</p>)\n          ) : (\n            <p>{content}</p>\n          )}\n\n          {content.ctaLink && content.ctaText ? (\n            <StyledLink to={content.ctaLink}>{content.ctaText}</StyledLink>\n          ) : null}\n        </AccordionContent>\n      </animated.div>\n    </li>\n  );\n};\n\nexport default AccordionItem;\n","import React from 'react';\nimport AccordionItem from './accordionItem';\nimport * as Styled from './style';\n\nconst Accordion = ({ tabData }) => (\n  <Styled.AccordionList>\n    {tabData.map((tab, index) => (\n      <AccordionItem tab={tab} index={index} key={index} />\n    ))}\n  </Styled.AccordionList>\n);\n\nexport default Accordion;\n","import React, { useState } from 'react';\nimport Content from '../content';\nimport Accordion from '../accordion';\nimport { Section } from '../section';\nimport { Wrapper } from '../wrapper';\nimport { FlexRow } from '../globals';\nimport { StyledLink } from '../button';\nimport * as Styled from './style';\n\nconst Tabs = ({\n  tabData,\n  contentData,\n  horizontal = false,\n  primary = false,\n}) => {\n  const [isActive, setActive] = useState(tabData[0]);\n\n  return (\n    <Section>\n      <Wrapper>\n        <Content\n          contentData={contentData}\n          horizontal={horizontal}\n          primary={primary}\n        />\n        <FlexRow alignCenter>\n          <Styled.TabList>\n            {tabData.map((tab, index) => (\n              <Styled.Tab\n                key={index}\n                isActive={isActive === tab}\n                onClick={() => setActive(tab)}\n                title={tab.heading}\n              >\n                <Styled.Count>0{index + 1}</Styled.Count>\n                {tab.heading}\n              </Styled.Tab>\n            ))}\n          </Styled.TabList>\n          <Styled.TabContent>\n            <h4>{isActive.heading}</h4>\n\n            {isActive.content.length > 1 && Array.isArray(isActive.content) ? (\n              isActive.content.map((p, index) => <p key={index}>{p}</p>)\n            ) : (\n              <p>{isActive.content}</p>\n            )}\n\n            {isActive.ctaLink && isActive.ctaText ? (\n              <StyledLink to={isActive.ctaLink}>{isActive.ctaText}</StyledLink>\n            ) : null}\n          </Styled.TabContent>\n        </FlexRow>\n        <Accordion tabData={tabData} />\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default Tabs;\n","module.exports = __webpack_public_path__ + \"static/corporate-office-bg-overlay-cb598170e2fa93d81c414e31aa9acbab.jpg\";","import styled from 'styled-components';\nimport { Section } from '../section';\nimport { hasBackgroundBox } from '../globals';\n\nexport const SectionWithBG = styled(Section)`\n  margin: 60px 0;\n\n  ${hasBackgroundBox}\n`;\n","import React from 'react';\nimport { Wrapper } from '../wrapper';\nimport { Section } from '../section';\nimport EmailForm from '../emailForm';\nimport * as Styled from './style';\n\nconst EmailSection = () => (\n  <Styled.SectionWithBG>\n    <Wrapper>\n      <EmailForm />\n    </Wrapper>\n  </Styled.SectionWithBG>\n);\n\nexport default EmailSection;\n","import React from 'react';\nimport { Section } from '../section';\nimport { Wrapper } from '../wrapper';\nimport Content from '../content';\n\nconst ContentSection = ({ contentData, children, horizontal = false }) => {\n  return (\n    <Section>\n      <Wrapper>\n        <Content contentData={contentData} horizontal={horizontal} />\n        {children}\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default ContentSection;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport Layout from '../components/layout';\nimport Hero from '../components/hero';\nimport Tabs from '../components/tabs';\nimport ContentSection from '../components/contentSection';\nimport FaqAccordion from '../components/faqAccordion';\nimport EmailSection from '../components/emailSection';\nimport ValueGrid from '../components/valueGrid';\nimport { FlexRow } from '../components/globals';\n\n// TODO: Look into bug: Green tab turns white when 3 column grid link is hovered over\nexport default function HowItWorks({ location }) {\n  const data = useStaticQuery(graphql`\n    query {\n      file(relativePath: { eq: \"how-it-works-info.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  const heroData = {\n    heading: 'How it works',\n  };\n\n  const contentData = [\n    {\n      id: 1,\n      heading: 'How we’ll set up your service',\n      content: [\n        'Before your free trial officially begins, we’ll work with you and your phone provider to set up call forwarding protocols for your phone systems.',\n\n        'This typically takes a short period of time, and requires very little effort on your end. Just let our Savvy representative know what you’d like from our service, and our top notch support team will take care of the rest.',\n      ],\n    },\n    {\n      id: 2,\n      heading: 'How we’ll forward your calls',\n      content: [\n        'One of the most important things you’ll do with your Savvy representative is decide on a preferred call forwarding method for your business.',\n\n        'Having one of these methods in place guarantees that all calls to your company get answered by a live voice, whether it’s from your office or our service. Keep in mind, that you can change your preferred call forwarding method at any time.',\n      ],\n    },\n    {\n      id: 3,\n      heading: 'How we’ll engage with your customers',\n      content: [\n        'Worried about how our answering service will greet your customers. You’ll be glad to know that one of the first things we do when setting up your account with Ring Savvy is establish a customized greeting for our receptionists to say to all of your business’ callers.',\n\n        'This greeting will always be polite, personalized, and help get conversations with new customers off on the right foot.',\n      ],\n    },\n    {\n      id: 4,\n      heading: 'How our 7 day free trial works',\n      content: [\n        'Once our service is setup with your phone systems, our virtual receptionist team can immediately begin answering calls on behalf of your business.',\n\n        'During the trial period, you’ll get 24/7/365 coverage from our receptionist team, as well as access to additional features, such as live call transferring and new customer intake.',\n      ],\n    },\n  ];\n\n  const gridData = [\n    {\n      heading: 'State of the art call forwarding',\n      content:\n        'Choose when you’d like to answer calls for your business, and when you’d like calls to be automatically forwarded to our team.',\n      ctaLink: '/services/overflow-call-handling/',\n    },\n    {\n      heading: 'Customizable to fit your business',\n      content:\n        'Personalize everything from the questions we ask first-time callers to your company, to the way we go about transferring your calls.',\n      ctaLink: '/services/overflow-call-handling/',\n    },\n    {\n      heading: 'Always live, 24/7/365',\n      content:\n        'Our call center is always up and running, and fully staffed with both English and Spanish speaking receptionists. We don’t even take holidays off.',\n      ctaLink: '/services/overflow-call-handling/',\n    },\n  ];\n\n  const tabData = [\n    {\n      heading: 'Straight call forwarding',\n      content: [\n        'Under this option, Ring Savvy customers are able to manually forward and unforward their calls to our virtual receptionist team. You’ll get to decide when you and your staff should be handling calls, and when calls should be directly sent to our service.',\n\n        'This is the simplest type of call forwarding we offer, and for many business owners will be the best method.',\n      ],\n      ctaText: 'Get started',\n      ctaLink: '/sign-up/',\n    },\n    {\n      heading: 'Rollover call forwarding',\n      content: [\n        'This method of call forwarding, allows business owners to forward calls to Ring Savvy on a conditional basis.',\n\n        'Conditions can include: Our service picking up after a certain number of rings, picking up when there are no other lines available for a call to ring on or picking up when your cell phone is without service.',\n      ],\n      ctaText: 'Get started',\n      ctaLink: '/sign-up/',\n    },\n    {\n      heading: 'Time of day call forwarding',\n      content: [\n        'This type of call forwarding is exactly what it sounds like. You tell us which hours of the day you’d like to answer business calls yourself (for example, during normal business hours), and let us know which hours you’d like our service to take over.',\n\n        'Make sure new leads that come in during the overnight and weekends never pass you by.',\n      ],\n      ctaText: 'Get started',\n      ctaLink: '/sign-up/',\n    },\n    {\n      heading: 'Full time call forwarding',\n      content: [\n        'Sometimes you just need a complete break from answering the phones and we can accommodate. Turn on this type of call forwarding, and we’ll answer every single one of your calls on the first ring.',\n\n        'This is a great option to have during extra busy work weeks, or when it’s time to go on vacation.',\n      ],\n      ctaText: 'Get started',\n      ctaLink: '/sign-up/',\n    },\n  ];\n\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>How It Works - Ring Savvy, Inc. Virtual Receptionists</title>\n        <meta\n          name='description'\n          content='How It Works | Ring Savvy | 24/7 Live Virtual Receptionist Answer Every Call You Miss. Learn More Here and Call Today For a Free Trial!'\n        />\n      </Helmet>\n      <Hero heading={heroData.heading} />\n      {/* TODO: create feature grid */}\n      <ValueGrid\n        horizontal\n        contentData={contentData.find((data) => data.id === 1)}\n        gridData={gridData}\n      />\n      <Tabs\n        contentData={contentData.find((data) => data.id === 2)}\n        tabData={tabData}\n        horizontal\n      />\n      <EmailSection />\n      <ContentSection\n        horizontal\n        contentData={contentData.find((data) => data.id === 3)}\n      >\n        {/* TODO: Why is this not displaying? */}\n        <FlexRow center>\n          <Img fluid={data.file.childImageSharp.fluid} />\n        </FlexRow>\n      </ContentSection>\n      <FaqAccordion\n        horizontal\n        contentData={contentData.find((data) => data.id === 4)}\n      />\n    </Layout>\n  );\n}\n","import styled from 'styled-components';\nimport Background from '../../assets/images/corporate-office-bg-overlay.jpg';\n\nexport const EmailCTA = styled.div`\n  position: relative;\n  flex-wrap: wrap;\n  padding: 2.5rem 3rem;\n  display: flex;\n  align-items: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.16);\n  background-image: url(${Background});\n\n  &::before {\n    border-radius: 5px;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(39, 39, 39, 0.86);\n  }\n\n  @media (max-width: 767px) {\n    padding: 1rem 1rem;\n  }\n`;\n\nexport const HalfWrapper = styled.div`\n  color: white;\n  position: relative;\n  width: 50%;\n\n  h3 {\n    margin: 0 0 0.5rem;\n    color: white;\n  }\n\n  p {\n    color: white;\n    margin: 0;\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    margin-bottom: 10px;\n    text-align: center;\n\n    h2 {\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-radius: 100px;\n  position: relative;\n  background-color: white;\n  padding: 0.5rem 0.75rem 0.5rem 1.5rem;\n\n  @media (max-width: 767px) {\n    padding: 0.5rem 1rem;\n\n    button {\n      padding: 0.75rem 2rem;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  outline: none;\n  border: none;\n\n  &:focus {\n    outline: none;\n    border: none;\n  }\n`;\n","import React from 'react';\nimport { StyledLink } from '../button';\nimport * as Styled from './style';\n\nconst EmailForm = () => (\n  <Styled.EmailCTA>\n    <Styled.HalfWrapper>\n      <h3>Want to revisit this later?</h3>\n      <p>Let us send you our company brochure.</p>\n    </Styled.HalfWrapper>\n    <Styled.HalfWrapper>\n      <Styled.FormWrapper>\n        <Styled.Input type='email' placeholder='Email Address' />\n        <StyledLink padding='medium' $primary to='/'>\n          Send\n        </StyledLink>\n      </Styled.FormWrapper>\n    </Styled.HalfWrapper>\n  </Styled.EmailCTA>\n);\n\nexport default EmailForm;\n","import React from 'react';\nimport { StyledLink } from '../button';\n\n// TODO: Refactor into own component? use with tabs also\nconst Cta = ({ data }) => {\n  const { heading, content, ctaLink, ctaText } = data;\n\n  return (\n    <>\n      <h4>{heading}</h4>\n\n      {content.length > 1 && Array.isArray(content) ? (\n        content.map((p, index) => <p key={index}>{p}</p>)\n      ) : (\n        <p>{content}</p>\n      )}\n\n      <StyledLink to={ctaLink}>{ctaText}</StyledLink>\n    </>\n  );\n};\n\nexport default Cta;\n","import styled, { css } from 'styled-components';\nimport { TabContent } from '../tabs/style';\n\nexport const Cta = styled(TabContent)`\n  display: block;\n  flex-wrap: wrap;\n  margin: 0 auto 0 0;\n  max-width: 430px;\n  position: relative;\n  top: 32px;\n`;\n\nexport const FaqList = styled.ul`\n  display: block;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 49%;\n\n  @media ${({ theme }) => theme.global.mediaQueries.md} {\n    width: 100%;\n  }\n`;\n\n// TODO: refactor reused styles from tabs/accordions/card, etc\nexport const Faq = styled.li`\n  align-items: center;\n  background: ${({ theme }) => theme.global.colors.white};\n  border-radius: 5px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.12);\n  color: #4d4d4d;\n  cursor: pointer;\n  display: block;\n  font-family: ${({ theme }) => theme.global.fonts.serif};\n  font-size: ${({ theme }) => theme.global.fontSizes.base};\n  font-weight: 700;\n  line-height: 1.3em;\n  margin: 0 0 20px;\n  max-width: 480px;\n  padding: 1.444444em;\n  transition: all 0.2s;\n  user-select: none;\n  width: 100%;\n\n  &:before {\n    position: absolute;\n    content: '${(props) => (props.isOpen ? '-' : '+')}';\n    color: #0abe51;\n    right: 40px;\n    font-size: 32px;\n  }\n\n  &:hover {\n    box-shadow: 0 0 12px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const FaqAnswer = styled.div`\n  color: #666;\n  font-family: 'Open Sans', sans-serif;\n  font-size: 0.9em;\n  font-weight: normal;\n  padding: 0.83333em 0 0 0;\n\n  p {\n    margin: 0;\n  }\n`;\n","import React, { useState } from 'react';\nimport useMeasure from '../../utils/useMeasure';\nimport { animated, useSpring } from 'react-spring';\nimport * as Styled from './style';\n\nconst Faq = ({ faq, index }) => {\n  const { question, answer } = faq;\n  const [isOpen, setOpen] = useState(false);\n\n  const [bind, { height, top }] = useMeasure();\n  const slide = useSpring({\n    overflow: 'hidden',\n    height: isOpen ? height + top : 0,\n    transform: isOpen ? 'translate3d(0, 0, 0)' : 'translate3d(0, -10px, 0)',\n  });\n\n  return (\n    <Styled.Faq onClick={() => setOpen(!isOpen)} isOpen={isOpen}>\n      {question}\n      <animated.div style={slide}>\n        <Styled.FaqAnswer {...bind}>\n          {answer.length > 1 && Array.isArray(answer) ? (\n            answer.map((p, index) => <p key={index}>{p}</p>)\n          ) : (\n            <p>{answer}</p>\n          )}\n        </Styled.FaqAnswer>\n      </animated.div>\n    </Styled.Faq>\n  );\n};\n\nexport default Faq;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Content from '../content';\nimport { Section } from '../section';\nimport { Wrapper } from '../wrapper';\nimport { FlexRow } from '../globals';\nimport Cta from './cta';\nimport Faq from './faq';\nimport * as Styled from './style';\n\nconst FaqAccordion = ({ contentData, horizontal = false, primary = false }) => {\n  const CtaData = {\n    heading: 'Try Ring Savvy free for 7 days',\n    content: [\n      'Experience all our phone answering service has to offer without any risk or financial commitment.',\n\n      'All business owners are given the opportunity to test out our receptionist team for over a week, and see for themselves whether or not Ring Savvy will be beneficial to their business.',\n    ],\n    ctaText: 'Get started',\n    ctaLink: '/sign-up/',\n  };\n\n  const faqData = [\n    {\n      question: 'What happens during my free trial?',\n      answer:\n        'During your free trial period, you’ll have access to just about all of our features, allowing you to take in the full Ring Savvy experience. The only feature we don’t offer to those in trial is appointment scheduling.',\n    },\n    {\n      question: 'Do I need to put a credit card down?',\n      answer:\n        'Not until your free trial concludes. We’ll only need your credit card information if you choose to become a Ring Savvy customer.',\n    },\n    {\n      question: 'How long will it take to set up my free trial?',\n      answer:\n        'Make sure new leads that come in during the overnight and weekends never pass you by.',\n    },\n    {\n      question: 'What happens at the end of my free trial?',\n      answer:\n        'A member of our team will reach out to you and go over the results of your trial period. If you’d like to continue using our service, we’ll get you started right away as a paying customer. If you decide the service is not for you, you can walk away at no cost.',\n    },\n  ];\n\n  return (\n    <Section>\n      <Wrapper>\n        <Content\n          contentData={contentData}\n          horizontal={horizontal}\n          primary={primary}\n        />\n        <FlexRow>\n          <Styled.Cta>\n            <Cta data={CtaData} />\n          </Styled.Cta>\n          <Styled.FaqList>\n            {faqData.map((faq, index) => (\n              <Faq faq={faq} index={index} key={index} />\n            ))}\n            <Link to='/faqs/'>Read more FAQs</Link>\n          </Styled.FaqList>\n        </FlexRow>\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default FaqAccordion;\n"],"sourceRoot":""}