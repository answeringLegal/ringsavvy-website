{"version":3,"sources":["webpack:///./src/components/section/index.js","webpack:///./src/components/postPreview/style.js","webpack:///./src/components/postPreview/index.js","webpack:///./src/components/pagination/style.js","webpack:///./src/components/pagination/index.js","webpack:///./src/components/postPreviewList/index.js","webpack:///./src/templates/blog.js"],"names":["Section","styled","div","hasDiag","css","PostContainer","PostThumbnail","Img","StyledLink","Link","theme","global","colors","black","fonts","serif","primary","PostLink","MoreLink","PostPreview","post","title","description","featuredImage","slug","to","alt","fluid","style","textDecoration","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","PaginationList","ul","PaginationLink","props","$isActive","fontSizes","base","Pagination","currentPage","numPages","isFirst","isLast","nextPage","prevPage","pageNumbers","i","push","map","number","key","PostPreviewList","mediaQueries","md","BlogIndex","pageContext","data","location","posts","allContentfulPost","edges","Helmet","name","content","heading","node"],"mappings":"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","file":"component---src-templates-blog-js-b5236f52618a3bf784c7.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const Section = styled.div`\n  padding: 60px 0;\n  position: relative;\n\n  :last-of-type {\n    padding-bottom: 0;\n  }\n\n  @media only screen and (max-width: 860px) {\n    padding: 30px 5%;\n  }\n\n  @media only screen and (max-width: 980px) {\n    padding: 30px 5%;\n  }\n\n  ${({ hasDiag }) =>\n    hasDiag &&\n    css`\n      :after {\n        content: '';\n        background-color: #f9f9f9;\n        height: 62%;\n        position: absolute;\n        transform: skewY(8deg);\n        top: 120px;\n        width: 100%;\n        z-index: -1;\n      }\n    `}\n`;\n","import styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nexport const PostContainer = styled.div`\n  margin-bottom: 60px;\n`;\n\nexport const PostThumbnail = styled(Img)`\n  border-radius: 10px;\n  box-shadow: 0 19px 70px 0 rgba(0, 0, 0, 0.12);\n  height: 230px;\n  margin-bottom: 32px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.global.colors.black};\n  font-family: ${({ theme }) => theme.global.fonts.serif};\n  font-weight: bold;\n\n  &:hover {\n    color: ${({ theme }) => theme.global.colors.primary};\n  }\n`;\n\nexport const PostLink = styled(StyledLink)`\n  font-size: 25px;\n`;\n\nexport const MoreLink = styled(StyledLink)`\n  color: ${({ theme }) => theme.global.colors.black};\n  font-family: ${({ theme }) => theme.global.fonts.serif};\n  font-size: 18px;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as Styled from './style';\n\nconst PostPreview = ({ post }) => {\n  const { title, description, featuredImage, slug } = post;\n\n  return (\n    <Styled.PostContainer>\n      <Link to={`/blog/${post.slug}`}>\n        <Styled.PostThumbnail alt={title} fluid={featuredImage.fluid} />\n      </Link>\n\n      <Styled.PostLink style={{ textDecoration: 'none' }} to={`/blog/${slug}`}>\n        {title}\n      </Styled.PostLink>\n\n      <p\n        dangerouslySetInnerHTML={{\n          __html: description.childMarkdownRemark.html,\n        }}\n      />\n\n      <Styled.MoreLink to={`/blog/${slug}`}>Continue Reading →</Styled.MoreLink>\n    </Styled.PostContainer>\n  );\n};\n\nexport default PostPreview;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nexport const PaginationList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n  margin: 0 0 80px;\n  padding: 0;\n`;\n\nexport const PaginationLink = styled(Link)`\n  background-color: ${(props) =>\n    props.$isActive ? props.theme.global.colors.primary : '#fff'};\n  border-radius: 100px;\n  border: ${(props) =>\n    props.$isActive\n      ? `1px solid ${props.theme.global.colors.primary}`\n      : '1px solid #ddd'};\n  color: ${(props) => (props.$isActive ? '#fff' : '#222')};\n  display: inline-block;\n  font-size: ${({ theme }) => theme.global.fontSizes.base};\n  font-weight: bold;\n  line-height: 1;\n  margin: 2px;\n  outline-offset: 3px;\n  padding: 1em 1.25em;\n  text-align: center;\n  text-decoration: none;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.global.colors.primary};\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport { PaginationList, PaginationLink } from './style';\n\nconst Pagination = ({\n  currentPage,\n  numPages,\n  isFirst,\n  isLast,\n  nextPage,\n  prevPage,\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= currentPage + 3 && i <= numPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <PaginationList>\n      {isFirst ? null : (\n        <li>\n          <PaginationLink to={`/blog${prevPage}`}>\n            « Previous Page\n          </PaginationLink>\n        </li>\n      )}\n\n      {pageNumbers.map((number) => (\n        <li key={number}>\n          <PaginationLink\n            $isActive={currentPage === number ? true : false}\n            to={`/blog/${number === 1 ? '' : number}`}\n          >\n            {number}\n          </PaginationLink>\n        </li>\n      ))}\n\n      {isLast ? null : (\n        <li>\n          <PaginationLink to={`/blog${nextPage}`}>Next Page »</PaginationLink>\n        </li>\n      )}\n    </PaginationList>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\n\n//TODO: Refactor to use differrent grids. Ex. 3 column grid on home page vs blog 2 column page\nexport const PostPreviewList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    flex-basis: 48%;\n\n    @media ${({ theme }) => theme.global.mediaQueries.md} {\n      flex-basis: 100%;\n    }\n  }\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport Layout from '../components/layout';\nimport PostPreview from '../components/postPreview';\nimport Pagination from '../components/pagination';\nimport Hero from '../components/hero';\nimport { Section } from '../components/section';\nimport { Wrapper } from '../components/wrapper';\nimport { PostPreviewList } from '../components/postPreviewList';\n\nexport default function BlogIndex({ pageContext, data, location }) {\n  const { currentPage, numPages } = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '' : `/${currentPage - 1}`;\n  const nextPage = `/${currentPage + 1}`;\n\n  const posts = data.allContentfulPost.edges;\n\n  const heroData = {\n    heading: 'Blog',\n  };\n\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>Blog - Ring Savvy, Inc. - Answering Service Innovators</title>\n        <meta\n          name='description'\n          content='Ring Savvy - Answering Service Innovators! Serving Industries and Small Businesses - Unparalleled Customer Service and Support - Call Now To Try It Free!'\n        />\n      </Helmet>\n      <Hero heading={heroData.heading} />\n      <Section>\n        <Wrapper>\n          <PostPreviewList>\n            {posts.map(({ node }) => {\n              return (\n                <li key={node.slug}>\n                  <PostPreview post={node} />\n                </li>\n              );\n            })}\n          </PostPreviewList>\n          <Pagination\n            currentPage={currentPage}\n            numPages={numPages}\n            isFirst={isFirst}\n            isLast={isLast}\n            nextPage={nextPage}\n            prevPage={prevPage}\n          />\n        </Wrapper>\n      </Section>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery($skip: Int!, $limit: Int!) {\n    allContentfulPost(\n      sort: { fields: [publishDate], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          title\n          slug\n          featuredImage {\n            fluid(maxWidth: 470, quality: 70) {\n              ...GatsbyContentfulFluid\n            }\n          }\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}