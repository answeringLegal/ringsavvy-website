{"version":3,"sources":["webpack:///./src/components/section/index.js","webpack:///./src/components/content/style.js","webpack:///./src/components/content/index.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///./src/utils/useMeasure.js","webpack:///./src/components/tabs/style.js"],"names":["Section","styled","div","hasDiag","css","Container","horizontal","theme","global","mediaQueries","md","centered","Heading","h2","primary","Content","contentData","heading","content","length","Array","isArray","map","p","index","key","MapShim","Map","getIndex","arr","result","some","entry","class_1","this","__entries__","Object","defineProperty","prototype","get","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","WeakMap","ResizeObserver","method","apply","useMeasure","ref","useRef","useState","bounds","ro","useEffect","current","TabList","ul","Tab","li","colors","white","fonts","serif","fontSizes","TabContent","article","Count","span"],"mappings":"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","file":"682289c737f32e7c3224bc094bd148f9cab9c66d-7de966a241382f7883e9.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const Section = styled.div`\n  padding: 60px 0;\n  position: relative;\n\n  :last-of-type {\n    padding-bottom: 0;\n  }\n\n  @media only screen and (max-width: 860px) {\n    padding: 30px 5%;\n  }\n\n  @media only screen and (max-width: 980px) {\n    padding: 30px 5%;\n  }\n\n  ${({ hasDiag }) =>\n    hasDiag &&\n    css`\n      :after {\n        content: '';\n        background-color: #f9f9f9;\n        height: 62%;\n        position: absolute;\n        transform: skewY(8deg);\n        top: 120px;\n        width: 100%;\n        z-index: -1;\n      }\n    `}\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 30px;\n  width: 100%;\n\n  ${({ horizontal }) =>\n    horizontal &&\n    css`\n      display: flex;\n\n      @media ${({ theme }) => theme.global.mediaQueries.md} {\n        flex-direction: column;\n      }\n    `}\n\n  ${({ centered }) =>\n    centered &&\n    css`\n      align-items: center;\n      display: flex;\n      flex-direction: column;\n      text-align: center;\n    `}\n`;\n\nexport const Heading = styled.h2`\n  max-width: 780px;\n  width: 100%;\n\n  ${({ horizontal }) =>\n    horizontal &&\n    css`\n      margin-right: 20px;\n      width: 40%;\n    `}\n\n  ${({ primary }) =>\n    primary &&\n    css`\n      width: 100%;\n      max-width: 500px;\n    `}\n\n  @media ${({ theme }) => theme.global.mediaQueries.md} {\n    width: 100%;\n  }\n`;\n\nexport const Content = styled.div`\n  max-width: 780px;\n\n  ${({ horizontal }) =>\n    horizontal &&\n    css`\n      width: 60%;\n    `}\n\n  ${({ primary }) =>\n    primary &&\n    css`\n      margin-left: auto;\n      max-width: 580px;\n    `}\n\n  @media ${({ theme }) => theme.global.mediaQueries.md} {\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport * as Styled from './style';\n\nconst Content = ({\n  contentData,\n  horizontal = false,\n  primary = false,\n  centered = false,\n}) => {\n  const { heading, content } = contentData;\n\n  // TODO: Refactor passing of props for styled components, if possible\n  return (\n    <Styled.Container\n      horizontal={horizontal}\n      primary={primary}\n      centered={centered}\n    >\n      <Styled.Heading horizontal={horizontal} primary={primary}>\n        {heading}\n      </Styled.Heading>\n      {content && (\n        <Styled.Content horizontal={horizontal} primary={primary}>\n          {content.length > 1 && Array.isArray(content) ? (\n            content.map((p, index) => <p key={index}>{p}</p>)\n          ) : (\n            <p>{content}</p>\n          )}\n        </Styled.Content>\n      )}\n    </Styled.Container>\n  );\n};\n\nexport default Content;\n","import \"core-js/modules/es.array.reduce.js\";\n\n/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;","import { useRef, useState, useEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport default function useMeasure() {\n  const ref = useRef();\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 });\n  const [ro] = useState(\n    () => new ResizeObserver(([entry]) => set(entry.contentRect))\n  );\n  useEffect(() => (ro.observe(ref.current), ro.disconnect), []);\n  return [{ ref }, bounds];\n}\n","import styled, { css } from 'styled-components';\n\nexport const TabList = styled.ul`\n  display: block;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: 50%;\n\n  @media ${({ theme }) => theme.global.mediaQueries.md} {\n    display: none;\n  }\n`;\n\nexport const Tab = styled.li`\n  align-items: center;\n  background: ${({ theme }) => theme.global.colors.white};\n  border-radius: 5px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.12);\n  color: #7a7a7a;\n  cursor: pointer;\n  display: flex;\n  font-family: ${({ theme }) => theme.global.fonts.serif};\n  font-size: ${({ theme }) => theme.global.fontSizes.md};\n  font-weight: 700;\n  line-height: 1.3em;\n  margin: 0 0 20px;\n  max-width: 480px;\n  padding: 2em 1.3333em;\n  transition: all 0.2s;\n\n  &:hover {\n    box-shadow: 0 0 12px rgba(0, 0, 0, 0.12);\n  }\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      background: ${({ theme }) => theme.global.colors.primary};\n      color: ${({ theme }) => theme.global.colors.white};\n    `}\n`;\n\nexport const TabContent = styled.article`\n  align-content: center;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: auto;\n  max-width: 430px;\n  position: relative;\n  width: 50%;\n\n  h4 {\n    margin-bottom: 1em;\n  }\n\n  p:last-of-type {\n    margin-bottom: 1.625em;\n  }\n\n  @media ${({ theme }) => theme.global.mediaQueries.md} {\n    display: none;\n  }\n`;\n\nexport const Count = styled.span`\n  font-size: 1.555555em;\n  margin: 0 0.857em 0 0;\n  opacity: 0.5;\n`;\n"],"sourceRoot":""}